name: Daily Bill Reminder

on:
  schedule:
    - cron: "0 9 * * *"  # Runs daily at 9 AM UTC
  workflow_dispatch:  # Allows manual execution

jobs:
  send-reminders:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Check directory structure
        run: |
          pwd
          ls -la
          find . -name "manage.py"
          find . -name "requirements.txt"

      - name: Install Dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install django mysqlclient django-tailwind plotly
          fi
          
      - name: Debug installed packages
        run: pip list

      - name: Setup MySQL Database User
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          # Create database user with appropriate permissions
          mysql -h127.0.0.1 -uroot -proot -e "CREATE USER IF NOT EXISTS '$DB_USER'@'%' IDENTIFIED BY '$DB_PASSWORD';"
          mysql -h127.0.0.1 -uroot -proot -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'%';"
          mysql -h127.0.0.1 -uroot -proot -e "FLUSH PRIVILEGES;"
          
          # Verify user has been created and has access
          mysql -h127.0.0.1 -uroot -proot -e "SELECT User, Host FROM mysql.user WHERE User='$DB_USER';"
          
          # Test connection with the new user
          mysql -h127.0.0.1 -u$DB_USER -p$DB_PASSWORD -e "SHOW DATABASES;"

      - name: Set Up Django Environment
        env:
          DJANGO_SETTINGS_MODULE: p.settings
          DATABASE_NAME: ${{ secrets.DB_NAME }}
          DATABASE_USER: ${{ secrets.DB_USER }}
          DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: 3306
        run: |
          # Debug database connection settings
          echo "Testing database connection..."
          cd p
          
          # Create a temporary Python script to test the database connection
          cat > test_db.py << EOF
          import os
          import mysql.connector
          
          try:
              conn = mysql.connector.connect(
                  host="${DATABASE_HOST}",
                  user="${DATABASE_USER}",
                  password="${DATABASE_PASSWORD}",
                  database="${DATABASE_NAME}"
              )
              print("Database connection successful!")
              conn.close()
          except Exception as e:
              print(f"Database connection error: {e}")
          EOF
          
          python test_db.py
          
          # Proceed with Django commands
          python manage.py migrate
          python manage.py collectstatic --noinput

      - name: Run Reminder Script
        env:
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          DATABASE_HOST: 127.0.0.1  # Explicitly set to localhost
        run: |
          cd p
          python reminder.py
